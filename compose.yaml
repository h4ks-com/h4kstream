# YAML anchors for DRY configuration
x-backend-common: &backend-common
  build:
    context: ./backend
    dockerfile: Dockerfile
  volumes:
  - ./data:/app/data
  - ${VOLUME_PATH}/music:/music
  - ${VOLUME_PATH}/songs:/songs
  environment:
  - REDIS_HOST=redis
  - REDIS_PORT=6379
  - ICECAST_HOST=icecast
  - MPD_USER_HOST=mpd-user
  - MPD_USER_PORT=6600
  - MPD_FALLBACK_HOST=mpd-fallback
  - MPD_FALLBACK_PORT=6601
  - DATA_PATH=/app/data
  - RECORDINGS_PATH=/app/data/recordings
  - ROOT_PATH=/api
  - ADMIN_API_TOKEN=${ADMIN_API_TOKEN}
  - LIQUIDSOAP_TOKEN=${LIQUIDSOAP_TOKEN}
  - JWT_SECRET=${JWT_SECRET}
  - LOG_LEVEL=${LOG_LEVEL:-INFO}
  - DEBUG=${DEBUG}
  - RELOAD=${RELOAD}
  depends_on:
  - redis
  - icecast
  - mpd-user
  - mpd-fallback
  restart: unless-stopped

# Dev-specific configuration (extends backend-common)
x-backend-dev: &backend-dev
  <<: *backend-common
  command: ["uv", "run", "python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
  volumes:
  - ./backend/app:/app/app
  - ./data:/app/data
  - ${VOLUME_PATH}/music:/music
  - ${VOLUME_PATH}/songs:/songs

# Frontend common configuration
x-frontend-common: &frontend-common
  container_name: frontend
  volumes:
  - ./data/caddy/logs:/var/log/caddy
  ports:
  - '80:80'
  depends_on:
  - icecast
  - liquidsoap
  restart: unless-stopped

services:
  # Backend instances - Production profile (static build)
  main-1:
    <<: *backend-common
    container_name: main-1
    profiles: ["production", ""]

  main-2:
    <<: *backend-common
    container_name: main-2
    profiles: ["production", ""]

  main-3:
    <<: *backend-common
    container_name: main-3
    profiles: ["production", ""]

  # Backend instances - Development profile (all 3 with hot reload)
  main-1-dev:
    <<: *backend-dev
    container_name: main-1
    profiles: ["dev"]

  main-2-dev:
    <<: *backend-dev
    container_name: main-2
    profiles: ["dev"]

  main-3-dev:
    <<: *backend-dev
    container_name: main-3
    profiles: ["dev"]

  webhook_worker:
    container_name: webhook_worker
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["uv", "run", "python", "-m", "app.services.webhook_worker"]
    environment:
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - MPD_USER_HOST=mpd-user
    - MPD_USER_PORT=6600
    - MPD_FALLBACK_HOST=mpd-fallback
    - MPD_FALLBACK_PORT=6601
    - LIQUIDSOAP_TELNET_HOST=liquidsoap
    - LIQUIDSOAP_TELNET_PORT=1234
    - LOG_LEVEL=${LOG_LEVEL:-INFO}
    extra_hosts:
    - "host.docker.internal:host-gateway"
    depends_on:
    - redis
    - liquidsoap
    - mpd-user
    - mpd-fallback
    restart: unless-stopped

  recording_worker:
    container_name: recording_worker
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["uv", "run", "python", "-m", "app.services.recording_worker"]
    volumes:
    - ./data:/app/data
    environment:
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - ICECAST_HOST=icecast
    - ICECAST_PORT=8000
    - DATA_PATH=/app/data
    - RECORDINGS_PATH=/app/data/recordings
    - ADMIN_API_TOKEN=${ADMIN_API_TOKEN}
    - JWT_SECRET=${JWT_SECRET}
    - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
    - redis
    - icecast
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    command:
    - redis-server
    - --save
    - '60'
    - '1'
    - --save
    - '300'
    - '10'
    - --save
    - '900'
    - '1000'
    - --appendonly
    - 'yes'
    - --appendfsync
    - everysec
    volumes:
    - ./data/redis:/data
    ports:
    - '6379:6379'
    restart: unless-stopped

  mpd-user:
    image: gists/mpd:latest
    container_name: mpd-user
    user: root
    volumes:
    - ${VOLUME_PATH}/music:/music
    - ${VOLUME_PATH}/playlist:/var/lib/mpd/playlists:rw
    - ./mpd/mpd.conf:/etc/mpd.conf:ro
    ports:
    - '6600:6600'
    - '8001:8001'

  mpd-fallback:
    image: gists/mpd:latest
    container_name: mpd-fallback
    user: root
    volumes:
    - ${VOLUME_PATH}/music:/music
    - ${VOLUME_PATH}/playlist-fallback:/var/lib/mpd/playlists:rw
    - ./mpd/mpd-fallback.conf:/etc/mpd.conf:ro
    ports:
    - '6601:6601'
    - '8002:8002'

  liquidsoap:
    image: savonet/liquidsoap:v2.3.0
    container_name: liquidsoap
    user: root
    volumes:
    - ./liquidsoap/radio.liq:/etc/liquidsoap/radio.liq:ro
    environment:
    - ICECAST_HOST=icecast
    - ICECAST_PORT=8000
    - ICECAST_PASSWORD=${ICECAST_SOURCE_PASSWORD}
    - MPD_USER_HOST=mpd-user
    - MPD_USER_PORT=8001
    - MPD_FALLBACK_HOST=mpd-fallback
    - MPD_FALLBACK_PORT=8002
    - BACKEND_HOST=frontend
    - BACKEND_PORT=80
    - BACKEND_BASE_PATH=/api
    - LIQUIDSOAP_TOKEN=${LIQUIDSOAP_TOKEN}
    depends_on:
    - mpd-user
    - mpd-fallback
    - icecast
    restart: unless-stopped
    command: /etc/liquidsoap/radio.liq

  icecast:
    image: infiniteproject/icecast:latest
    container_name: icecast
    volumes:
    - ./icecast/icecast.xml:/etc/icecast.xml:ro
    environment:
    - ICECAST_SOURCE_PASSWORD=${ICECAST_SOURCE_PASSWORD}
    - ICECAST_ADMIN_PASSWORD=${ICECAST_ADMIN_PASSWORD}
    - ICECAST_PASSWORD=${ICECAST_PASSWORD}
    - ICECAST_HOSTNAME=localhost
    restart: unless-stopped

  # Frontend - Production: multi-stage build
  frontend:
    <<: *frontend-common
    build:
      context: .
      dockerfile: frontend/Dockerfile
    depends_on:
    - main-1
    - main-2
    - main-3
    - icecast
    - liquidsoap
    profiles: ["production", ""]

  # Frontend - Development: serve locally built files
  frontend-dev:
    <<: *frontend-common
    image: caddy:2-alpine
    volumes:
    - ./Caddyfile:/etc/caddy/Caddyfile:ro
    - ./frontend/build:/srv:ro
    - ./data/caddy/logs:/var/log/caddy
    depends_on:
    - main-1-dev
    - main-2-dev
    - main-3-dev
    - icecast
    - liquidsoap
    profiles: ["dev"]

networks:
  default:
    driver: bridge
